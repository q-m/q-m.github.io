swagger: '2.0'
info:
  title: Questionmark API v1.1
  version: '1.1.0'
  description: |-
    [Questionmark](http://www.thequestionmark.org/)
    stands for your right to know the story behind the products you buy: where they come from
    and how they are produced. We believe that this type of transparency is crucial to developing
    sustainable supply chains. Our mission is to make consumers more aware of the choices they
    have when buying a product and also to urge companies to become more transparent.

    The Questionmark API allows access to this information by third parties. The more consumers
    see this information, the more people will be able to make a sustainable choice,
    the more producers have an incentive to become more sustainable.

    [Lees meer](http://www.thequestionmark.org/over) over, or
    [read more](http://www.thequestionmark.org/en/questionmark-organisation) about
    Questionmark.

    ### Terms and license

    API usage is free for non-commercial use, as long as you notify us and provide proper attribution
    ([CC-BY-NC](https://creativecommons.org/licenses/by-nc/4.0/)). This applies to public endpoints and
    parameters documented here, requiring no authentication.
    If you plan to make large amounts of queries (sustained >15 per minute),
    please [contact](http://thequestionmark.org/contact) us first.
    For commercial use, please contact [QM intelligence](http://www.qmintelligence.com/).

    ### Beta status

    Please note that this API has a long-running beta-status. Not all imaginable endpoints
    are present, and some parameters may be different than expected (because of historical reasons).
    With a future 2.0 version of the API, this will be cleaned up.

    This documentation is also not fully complete. Be careful when relying on undocumented features,
    as they may change without notice.

    ### Technical notes

    * The base url for the API is `https://api-c.thequestionmark.org/api/v1.1`, so e.g. the product list
      endpoint can be accessed at `https://api-c.thequestionmark.org/api/v1.1/products`.

    * Most endpoints return JSON by default, but to make sure you'll always receive JSON (also
      in case of errors), you have to either add an `Accept: application/json` header to each request,
      or append `.json` to the url (e.g. `/products.json` for the product list).

    ### Concepts

    **Products** are (food) products from the supermarket (and elsewhere) as seen by consumers, each
    receiving their own sustainability and health score.

    The _sustainability score_ is a number from 1 to 10, with 10 the best score.
    It is the average of one or more theme scores (_environment_, _social_ and _animals_). This score
    is a rating as compared with other products in the same comparison group.

    The _health score_ has a scale consisting of `C2`, `C1`, `B1`, `B2` and `A` (with `A` the best score),
    which correspond to _Nee_, _Niet echt_, _Matig_, _Redelijk_ and _Ja_ respectively. This score is
    awarded according to the product's health group. For historical reasons, this score is sometimes called
    _personal health score_.

    [Read more about the scoring methodology](http://www.thequestionmark.org/en/method).

    **Product alternatives** are similar products (currently based on usage, but that may change), sorted
    by most sustainable first.

    **Retailers** are most importantly supermarkets. We focus on 8 of about 50, being
    [Albert Heijn](http://www.ah.nl/), [Jumbo](http://www.jumbo.com/), [Plus](http://www.plus.nl/),
    [Coop](http://www.coop.nl/), [Lidl](http://www.lidl.nl/), [Aldi](http://www.aldi.nl/),
    [Marqt](http://www.marqt.nl/) and [EkoPlaza](http://www.ekoplaza.nl/), which together
    cover about 80% of the market.

    **Usages** are the main [taxonomy](https://en.wikipedia.org/wiki/Taxonomy_%28general%29) we
    use to categorize products. Other categorizations, like the browsing categories on our
    website, comparison groups and health groups, are derived from the usage.

    **Certificates** are certifications, like
    [EU Organic](http://ec.europa.eu/agriculture/organic/organic-farming/what-is-organic-farming/organic-certification_en),
    [Fairtrade](http://www.fairtrade.net/), [MSC](http://www.msc.org/) or [Vegan](https://www.vegansociety.com/), as found
    on the package of the product.

    **Stories** are websites, videos, images, etc. that relate to products, based on the
    product, its brand, and its ingredients. They provide a background for consumers to read
    more about the product, and for content providers to share their stories.

  # please note that endpoints and parameters marked with `x-internal: false` are not considered to be public

host: api-c.thequestionmark.org
schemes:
  - 'https'
basePath: /api/v1.1

produces:
  - 'application/json'

paths:
  /products:
    get:
      summary: list products
      tags:
        - Products
      parameters:
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/per_page'
        - $ref: '#/parameters/detailProduct'
        - $ref: '#/parameters/q'
        - $ref: '#/parameters/usage_id'
        - $ref: '#/parameters/usage_ids'
        - $ref: '#/parameters/category_id'
        - $ref: '#/parameters/brand_id'
        - $ref: '#/parameters/brand_ids'
        - $ref: '#/parameters/retailer_id'
        - $ref: '#/parameters/retailer_ids'
        - $ref: '#/parameters/comparison_group_id'
        - $ref: '#/parameters/health_group_id'
        - $ref: '#/parameters/certificate_id'
        - $ref: '#/parameters/certificate_ids'
        - $ref: '#/parameters/scored'
        - $ref: '#/parameters/sustainability_scored'
        - $ref: '#/parameters/personal_health_scored'
        - $ref: '#/parameters/score'
        - $ref: '#/parameters/personal_health_score'
        - $ref: '#/parameters/environment_score'
        - $ref: '#/parameters/social_score'
        - $ref: '#/parameters/animals_score'
        - $ref: '#/parameters/sortProducts'
        - $ref: '#/parameters/sortProductsBiz'
        - $ref: '#/parameters/ids'
        - $ref: '#/parameters/package_size_min'
        - $ref: '#/parameters/package_size_max'
        - $ref: '#/parameters/package_size_unit'
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              products:
                type: array
                items:
                  $ref: '#/definitions/Product'
              total:
                $ref: '#/definitions/total'
  /products/{id}:
    get:
      summary: get product by id
      tags:
        - Products
      parameters:
        - $ref: '#/parameters/idInUrl'
        - $ref: '#/parameters/detailProduct'
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/Product'
        404:
          description: product not found
          schema:
            $ref: '#/definitions/Error'
  /products/{barcode}:
    get:
      summary: get product by barcode
      tags:
        - Products
      parameters:
        - $ref: '#/parameters/barcodeInUrl'
        - $ref: '#/parameters/detailProduct'
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/Product'
        404:
          description: product not found
          schema:
            $ref: '#/definitions/Error'
  /products/{id}/alternatives:
    get:
      summary: list alternatives for a product
      tags:
        - Products
      parameters:
        - $ref: '#/parameters/idInUrl'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/per_page'
        - $ref: '#/parameters/detailProduct'
        - $ref: '#/parameters/q'
        - $ref: '#/parameters/usage_id'
        - $ref: '#/parameters/usage_ids'
        - $ref: '#/parameters/category_id'
        - $ref: '#/parameters/brand_id'
        - $ref: '#/parameters/brand_ids'
        - $ref: '#/parameters/retailer_id'
        - $ref: '#/parameters/retailer_ids'
        - $ref: '#/parameters/comparison_group_id'
        - $ref: '#/parameters/health_group_id'
        - $ref: '#/parameters/certificate_id'
        - $ref: '#/parameters/certificate_ids'
        - $ref: '#/parameters/scored'
        - $ref: '#/parameters/sustainability_scored'
        - $ref: '#/parameters/personal_health_scored'
        - $ref: '#/parameters/score'
        - $ref: '#/parameters/personal_health_score'
        - $ref: '#/parameters/environment_score'
        - $ref: '#/parameters/social_score'
        - $ref: '#/parameters/animals_score'
        - $ref: '#/parameters/sortProducts'
        - $ref: '#/parameters/sortProductsBiz'
        - $ref: '#/parameters/ids'
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              products:
                type: array
                items:
                  $ref: '#/definitions/Product'
              total:
                $ref: '#/definitions/total'
        404:
          description: product not found
          schema:
            $ref: '#/definitions/Error'

  /brands:
    get:
      summary: list brands
      tags:
        - Brands
      parameters:
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/per_page'
        - $ref: '#/parameters/q_name'
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              brands:
                type: array
                items:
                  $ref: '#/definitions/Brand'
              total:
                $ref: '#/definitions/total'
  /brands/{id}:
    get:
      summary: get brand by id
      tags:
        - Brands
      parameters:
        - $ref: '#/parameters/idInUrl'
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/Brand'
        404:
          description: brand not found
          schema:
            $ref: '#/definitions/Error'

  /certificates:
    get:
      summary: list certificates
      tags:
        - Certificates
      parameters:
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/per_page'
        - $ref: '#/parameters/q_name'
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              certificates:
                type: array
                items:
                  $ref: '#/definitions/Certificate'
              total:
                $ref: '#/definitions/total'
  /certificates/{id}:
    get:
      summary: get certificate by id
      tags:
        - Certificates
      parameters:
        - $ref: '#/parameters/idInUrl'
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/Certificate'
        404:
          description: certificate not found
          schema:
            $ref: '#/definitions/Error'

  /retailers:
    get:
      summary: list retailers
      tags:
        - Retailers
      responses:
        200:
          description: success
          schema:
            type: array
            items:
              $ref: '#/definitions/Retailer'
  /retailers/{id}:
    get:
      summary: get retailer by id
      tags:
        - Retailers
      parameters:
        - $ref: '#/parameters/idInUrl'
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/Retailer'
        404:
          description: retailer not found
          schema:
            $ref: '#/definitions/Error'

  /health_groups:
    get:
      summary: list health groups
      x-internal: true
      tags:
        - Scoring
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              health_groups:
                type: array
                items:
                  $ref: '#/definitions/HealthGroup'
              total:
                $ref: '#/definitions/total'
  /health_groups/{id}:
    get:
      summary: get health group by id
      x-internal: true
      tags:
        - Scoring
      parameters:
        - $ref: '#/parameters/idInUrl'
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/HealthGroup'
        404:
          description: health group not found
          schema:
            $ref: '#/definitions/Error'
  /categories.json:
    get:
      summary: list categories
      x-internal: true
      tags:
        - Usages
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              categories:
                type: array
                items:
                  $ref: '#/definitions/Category'

  /ingredients/{id}:
    get:
      summary: get ingredient
      x-internal: true
      tags:
        - Ingredients
      parameters:
        - $ref: '#/parameters/idInUrl'
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/Ingredient'
        404:
          description: ingredient not found
          schema:
            $ref: '#/definitions/Error'

  /stories/{id}:
    get:
      summary: get story
      tags:
        - Stories
      parameters:
        - $ref: '#/parameters/idInUrl'
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/Story'
        404:
          description: story not found
          schema:
            $ref: '#/definitions/Error'
  /stories/{id}/like:
    post:
      summary: like a story
      x-internal: true
      tags:
        - Stories
      parameters:
        - $ref: '#/parameters/idInUrl'
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/Success'
        401:
          description: no authenticated user
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: unlike a story
      x-internal: true
      tags:
        - Stories
      parameters:
        - $ref: '#/parameters/idInUrl'
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/Success'
        401:
          description: no authenticated user
          schema:
            $ref: '#/definitions/Error'
        404:
          description: story not liked by user
          schema:
            $ref: '#/definitions/Error'
  /stories/{id}/flag:
    post:
      summary: flag a story for moderation
      x-internal: true
      tags:
        - Stories
      parameters:
        - $ref: '#/parameters/idInUrl'
        - $ref: '#/parameters/device_uuid'
        - $ref: '#/parameters/flaggingFlag'
        - $ref: '#/parameters/flaggingOriginatingUrl'
      responses:
        200:
          description: success
          schema:
            $ref: '#/definitions/Success'
        404:
          description: story not found
          schema:
            $ref: '#/definitions/Error'

  /products/brands:
    get:
      summary: list brands for a product query
      tags:
        - Brands
      parameters:
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/per_page'
        - $ref: '#/parameters/q'
        - $ref: '#/parameters/usage_id'
        - $ref: '#/parameters/usage_ids'
        - $ref: '#/parameters/category_id'
        - $ref: '#/parameters/brand_id'
        - $ref: '#/parameters/brand_ids'
        - $ref: '#/parameters/retailer_id'
        - $ref: '#/parameters/retailer_ids'
        - $ref: '#/parameters/comparison_group_id'
        - $ref: '#/parameters/health_group_id'
        - $ref: '#/parameters/certificate_id'
        - $ref: '#/parameters/certificate_ids'
        - $ref: '#/parameters/scored'
        - $ref: '#/parameters/sustainability_scored'
        - $ref: '#/parameters/personal_health_scored'
        - $ref: '#/parameters/score'
        - $ref: '#/parameters/personal_health_score'
        - $ref: '#/parameters/environment_score'
        - $ref: '#/parameters/social_score'
        - $ref: '#/parameters/animals_score'
        - $ref: '#/parameters/ids'
        - $ref: '#/parameters/brands_q_name'
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              brands:
                type: array
                items:
                  $ref: '#/definitions/Brand'
              total:
                $ref: '#/definitions/total'
  /products/certificates:
    get:
      summary: list certificates for a product query
      tags:
        - Certificates
      parameters:
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/per_page'
        - $ref: '#/parameters/q'
        - $ref: '#/parameters/usage_id'
        - $ref: '#/parameters/usage_ids'
        - $ref: '#/parameters/category_id'
        - $ref: '#/parameters/brand_id'
        - $ref: '#/parameters/brand_ids'
        - $ref: '#/parameters/retailer_id'
        - $ref: '#/parameters/retailer_ids'
        - $ref: '#/parameters/comparison_group_id'
        - $ref: '#/parameters/health_group_id'
        - $ref: '#/parameters/certificate_id'
        - $ref: '#/parameters/certificate_ids'
        - $ref: '#/parameters/scored'
        - $ref: '#/parameters/sustainability_scored'
        - $ref: '#/parameters/personal_health_scored'
        - $ref: '#/parameters/score'
        - $ref: '#/parameters/personal_health_score'
        - $ref: '#/parameters/environment_score'
        - $ref: '#/parameters/social_score'
        - $ref: '#/parameters/animals_score'
        - $ref: '#/parameters/ids'
        - $ref: '#/parameters/certificates_q_name'
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              stories:
                type: array
                items:
                  $ref: '#/definitions/Certificate'
              total:
                $ref: '#/definitions/total'
  /products/retailers:
    get:
      summary: list retailers for a product query
      tags:
        - Retailers
      parameters:
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/per_page'
        - $ref: '#/parameters/q'
        - $ref: '#/parameters/usage_id'
        - $ref: '#/parameters/usage_ids'
        - $ref: '#/parameters/category_id'
        - $ref: '#/parameters/brand_id'
        - $ref: '#/parameters/brand_ids'
        - $ref: '#/parameters/retailer_id'
        - $ref: '#/parameters/retailer_ids'
        - $ref: '#/parameters/comparison_group_id'
        - $ref: '#/parameters/health_group_id'
        - $ref: '#/parameters/certificate_id'
        - $ref: '#/parameters/certificate_ids'
        - $ref: '#/parameters/scored'
        - $ref: '#/parameters/sustainability_scored'
        - $ref: '#/parameters/personal_health_scored'
        - $ref: '#/parameters/score'
        - $ref: '#/parameters/personal_health_score'
        - $ref: '#/parameters/environment_score'
        - $ref: '#/parameters/social_score'
        - $ref: '#/parameters/animals_score'
        - $ref: '#/parameters/ids'
        - $ref: '#/parameters/retailers_q_name'
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              retailers:
                type: array
                items:
                  $ref: '#/definitions/Retailer'
              total:
                $ref: '#/definitions/total'
  /products/usages:
    get:
      summary: list usages (categories) for a product query
      tags:
        - Usages
      parameters:
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/per_page'
        - $ref: '#/parameters/q'
        - $ref: '#/parameters/usage_id'
        - $ref: '#/parameters/usage_ids'
        - $ref: '#/parameters/category_id'
        - $ref: '#/parameters/brand_id'
        - $ref: '#/parameters/brand_ids'
        - $ref: '#/parameters/retailer_id'
        - $ref: '#/parameters/retailer_ids'
        - $ref: '#/parameters/comparison_group_id'
        - $ref: '#/parameters/health_group_id'
        - $ref: '#/parameters/certificate_id'
        - $ref: '#/parameters/certificate_ids'
        - $ref: '#/parameters/scored'
        - $ref: '#/parameters/sustainability_scored'
        - $ref: '#/parameters/personal_health_scored'
        - $ref: '#/parameters/score'
        - $ref: '#/parameters/personal_health_score'
        - $ref: '#/parameters/environment_score'
        - $ref: '#/parameters/social_score'
        - $ref: '#/parameters/animals_score'
        - $ref: '#/parameters/ids'
        - $ref: '#/parameters/usages_q_name'
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              usages:
                type: array
                items:
                  $ref: '#/definitions/Usage'
              total:
                $ref: '#/definitions/total'
  /products/comparison_groups:
    get:
      summary: list comparison groups for a product query
      x-internal: true
      tags:
        - Scoring
      parameters:
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/per_page'
        - $ref: '#/parameters/q'
        - $ref: '#/parameters/usage_id'
        - $ref: '#/parameters/usage_ids'
        - $ref: '#/parameters/category_id'
        - $ref: '#/parameters/brand_id'
        - $ref: '#/parameters/brand_ids'
        - $ref: '#/parameters/retailer_id'
        - $ref: '#/parameters/retailer_ids'
        - $ref: '#/parameters/comparison_group_id'
        - $ref: '#/parameters/health_group_id'
        - $ref: '#/parameters/certificate_id'
        - $ref: '#/parameters/certificate_ids'
        - $ref: '#/parameters/scored'
        - $ref: '#/parameters/sustainability_scored'
        - $ref: '#/parameters/personal_health_scored'
        - $ref: '#/parameters/score'
        - $ref: '#/parameters/personal_health_score'
        - $ref: '#/parameters/environment_score'
        - $ref: '#/parameters/social_score'
        - $ref: '#/parameters/animals_score'
        - $ref: '#/parameters/sortProductIngredients'
        - $ref: '#/parameters/ids'
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              stories:
                type: array
                items:
                  $ref: '#/definitions/ComparisonGroup'
              total:
                $ref: '#/definitions/total'
  /products/stories:
    get:
      summary: list stories for a product query
      tags:
        - Stories
      parameters:
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/per_page'
        - $ref: '#/parameters/q'
        - $ref: '#/parameters/usage_id'
        - $ref: '#/parameters/usage_ids'
        - $ref: '#/parameters/category_id'
        - $ref: '#/parameters/brand_id'
        - $ref: '#/parameters/brand_ids'
        - $ref: '#/parameters/retailer_id'
        - $ref: '#/parameters/retailer_ids'
        - $ref: '#/parameters/comparison_group_id'
        - $ref: '#/parameters/health_group_id'
        - $ref: '#/parameters/certificate_id'
        - $ref: '#/parameters/certificate_ids'
        - $ref: '#/parameters/scored'
        - $ref: '#/parameters/sustainability_scored'
        - $ref: '#/parameters/personal_health_scored'
        - $ref: '#/parameters/score'
        - $ref: '#/parameters/personal_health_score'
        - $ref: '#/parameters/environment_score'
        - $ref: '#/parameters/social_score'
        - $ref: '#/parameters/animals_score'
        - $ref: '#/parameters/ids'
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              stories:
                type: array
                items:
                  # @todo fix API to return: $ref: '#/parameters/Story'
                  type: object
                  properties:
                    url:
                      type: string
              total:
                $ref: '#/definitions/total'
  /products/ingredients:
    get:
      summary: list ingredients for a product query
      x-internal: true
      tags:
        - Ingredients
      parameters:
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/per_page'
        - $ref: '#/parameters/detailIngredient'
        - $ref: '#/parameters/q'
        - $ref: '#/parameters/usage_id'
        - $ref: '#/parameters/usage_ids'
        - $ref: '#/parameters/category_id'
        - $ref: '#/parameters/brand_id'
        - $ref: '#/parameters/brand_ids'
        - $ref: '#/parameters/retailer_id'
        - $ref: '#/parameters/retailer_ids'
        - $ref: '#/parameters/comparison_group_id'
        - $ref: '#/parameters/health_group_id'
        - $ref: '#/parameters/certificate_id'
        - $ref: '#/parameters/certificate_ids'
        - $ref: '#/parameters/scored'
        - $ref: '#/parameters/sustainability_scored'
        - $ref: '#/parameters/personal_health_scored'
        - $ref: '#/parameters/score'
        - $ref: '#/parameters/personal_health_score'
        - $ref: '#/parameters/environment_score'
        - $ref: '#/parameters/social_score'
        - $ref: '#/parameters/animals_score'
        - $ref: '#/parameters/sortProductIngredients'
        - $ref: '#/parameters/ids'
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              stories:
                type: array
                items:
                  $ref: '#/definitions/Ingredient'
              total:
                $ref: '#/definitions/total'
        401:
          description: no authenticated owner
          schema:
            $ref: '#/definitions/Error'

  /products/{id}/stories:
    get:
      summary: list stories for a product
      tags:
        - Stories
      parameters:
        - $ref: '#/parameters/idInUrl'
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              stories:
                type: array
                items:
                  $ref: '#/definitions/Story'
              total:
                $ref: '#/definitions/total'
        404:
          description: product not found
          schema:
            $ref: '#/definitions/Error'

  /products/histogram:
    get:
      summary: get histogram for a product query (requires owner)
      x-internal: true
      tags:
        - Scoring
      parameters:
        - $ref: '#/parameters/histogramGroupBy'
        - $ref: '#/parameters/q'
        - $ref: '#/parameters/usage_id'
        - $ref: '#/parameters/usage_ids'
        - $ref: '#/parameters/category_id'
        - $ref: '#/parameters/brand_id'
        - $ref: '#/parameters/brand_ids'
        - $ref: '#/parameters/retailer_id'
        - $ref: '#/parameters/retailer_ids'
        - $ref: '#/parameters/comparison_group_id'
        - $ref: '#/parameters/health_group_id'
        - $ref: '#/parameters/certificate_id'
        - $ref: '#/parameters/certificate_ids'
        - $ref: '#/parameters/scored'
        - $ref: '#/parameters/sustainability_scored'
        - $ref: '#/parameters/personal_health_scored'
        - $ref: '#/parameters/score'
        - $ref: '#/parameters/personal_health_score'
        - $ref: '#/parameters/environment_score'
        - $ref: '#/parameters/social_score'
        - $ref: '#/parameters/animals_score'
        - $ref: '#/parameters/ids'
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              products_histogram:
                $ref: '#/definitions/ProductsHistogram'
        401:
          description: no authenticated owner
          schema:
            $ref: '#/definitions/Error'

  /products/{id}/scoring_report:
    get:
      summary: get product scoring report (requires owner of product)
      x-internal: true
      tags:
        - Scoring
      parameters:
        - $ref: '#/parameters/idInUrl'
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              scoring_report:
                $ref: '#/definitions/ScoringReport'
        401:
          description: product not owned by authenticated user
          schema:
            $ref: '#/definitions/Error'
        404:
          description: product not found
          schema:
            $ref: '#/definitions/Error'

  /ingredients/{id}/alternatives:
    get:
      summary: list alternatives for an ingredient (requires owner)
      x-internal: true
      tags:
        - Ingredients
      parameters:
        - $ref: '#/parameters/idInUrl'
        - $ref: '#/parameters/page'
        - $ref: '#/parameters/per_page'
        - $ref: '#/parameters/sortIngredients'
      responses:
        200:
          description: success
          schema:
            type: object
            properties:
              ingredients:
                $ref: '#/definitions/IngredientBiz'
              total:
                $ref: '#/definitions/total'
        401:
          description: no authenticated owner
          schema:
            $ref: '#/definitions/Error'


  /user/sign_in:
    post:
      summary: login with email address
      x-internal: true
      tags:
        - Users
      parameters:
        - $ref: '#/parameters/email'
        - $ref: '#/parameters/password'
        - $ref: '#/parameters/app'
      responses:
        200:
          description: login failed (`success` is `false`) or succeeded
          schema:
            type: object
            properties:
              success:
                type: boolean
              error:
                type: string
                description: login failure reason (only present when `success` is `false`)
              user:
                $ref: '#/definitions/User'
  /user/status:
    get:
      summary: get user info
      x-internal: true
      tags:
        - Users
      responses:
        200:
          description: success (always)
          schema:
            type: object
            properties:
              logged_in:
                type: boolean
              user:
                $ref: '#/definitions/User'
  /user/sign_out:
    get:
      summary: logout (client needs to forget authentication_token!)
      x-internal: true
      tags:
        - Users
      responses:
        204:
          description: success



parameters:
  # url parameters
  idInUrl:
    name: id
    type: integer
    in: path
    minimum: 1
    required: true
  barcodeInUrl:
    name: barcode
    type: string
    in: path
    minLength: 8
    maxLength: 13
    pattern: '[0-9]{8,13}'
    required: true

  # query parameters
  page:
    name: page
    type: integer
    in: query
    description: page number
    minimum: 0
    default: 0
    required: false
  per_page:
    name: per_page
    type: integer
    in: query
    description: items per page
    minimum: 0
    default: 20
    maximum: 500
    required: false

  # query parameter collections
  q:
    name: q
    type: string
    in: query
    description: search query (name, brand or barcode)
    required: false
  q_name:
    name: q
    type: string
    in: query
    description: search query (name)
    required: false
  usage_id:
    name: usage_id
    type: integer
    in: query
    description: restrict by usage (category)
    required: false
  usage_ids:
    name: usage_ids[]
    type: array
    items:
      type: string
    in: query
    description: restrict to usages
    required: false
    collectionFormat: multi
  category_id:
    name: category_id
    type: integer
    in: query
    description: restrict by usage (category); deprecated in favor of `usage_id`
    x-internal: true
    required: false
  brand_id:
    name: brand_id
    type: integer
    in: query
    description: restrict to brand
    required: false
  brand_ids:
    name: brand_ids[]
    type: array
    items:
      type: integer
    in: query
    description: restrict to brands
    required: false
    collectionFormat: multi
  retailer_id:
    name: retailer_id
    type: integer
    in: query
    description: restrict to retailer
    required: false
  retailer_ids:
    name: retailer_ids[]
    type: array
    items:
      type: integer
    in: query
    description: restrict to retailers
    required: false
    collectionFormat: multi
  comparison_group_id:
    name: comparison_group_id
    type: integer
    in: query
    description: restrict to comparison group
    x-internal: true
    required: false
  health_group_id:
    name: health_group_id
    type: integer
    in: query
    description: restrict to health group
    x-internal: true
    required: false
  certificate_id:
    name: certificate_id
    type: integer
    in: query
    description: restrict to certificate
    required: false
  certificate_ids:
    name: certificate_ids[]
    type: array
    items:
      type: integer
    in: query
    description: restrict to certificates
    required: false
    collectionFormat: multi
  scored:
    name: scored
    type: boolean
    enum: [true]
    in: query
    description: require a published (health or sustainability) score
    required: false
  sustainability_scored:
    name: sustainability_scored
    type: boolean
    in: query
    description: require a published sustainability score
    required: false
  personal_health_scored:
    name: personal_health_scored
    type: boolean
    in: query
    description: require a published health score
    required: false
  score:
    name: score
    type: integer
    in: query
    description: restrict by sustainability score
    minimum: 1
    maximum: 10
    required: false
  personal_health_score:
    name: personal_health_score
    type: string
    enum: ['A', 'B1', 'B2', 'C1', 'C2']
    in: query
    description: restrict by health score
    required: false
  environment_score:
    name: environment_score
    type: integer
    in: query
    description: restrict by environment score
    minimum: 1
    maximum: 10
    required: false
  social_score:
    name: social_score
    type: integer
    in: query
    description: restrict by social score
    minimum: 1
    maximum: 10
    required: false
  animals_score:
    name: animals_score
    type: integer
    in: query
    description: restrict by animals score
    minimum: 1
    maximum: 10
    required: false
  sortProducts:
    name: sort
    type: string
    enum:
    - name
    - name DESC
    - score
    - score ASC
    - personal_health_score
    - personal_health_score DESC
    - environment_score
    - environment_score ASC
    - social_score
    - social_score ASC
    - animals_score
    - animals_score ASC
    - nutrient_B12
    - nutrient_B12 DESC
    - nutrient_calcium
    - nutrient_calcium DESC
    - nutrient_energy
    - nutrient_energy DESC
    - nutrient_fat_saturated
    - nutrient_fat_saturated DESC
    - nutrient_fat_total
    - nutrient_fat_total DESC
    - nutrient_fat_trans
    - nutrient_fat_trans DESC
    - nutrient_fiber
    - nutrient_fiber DESC
    - nutrient_iron
    - nutrient_iron DESC
    - nutrient_natrium
    - nutrient_natrium DESC
    - nutrient_protein
    - nutrient_protein DESC
    - nutrient_salt
    - nutrient_salt DESC
    - nutrient_sugar
    - nutrient_sugar DESC
    in: query
    description: sorting order
    required: false
  sortProductsBiz:
    x-internal: true
    name: sort
    type: string
    enum:
    - nutrient_B12_benchmark
    - nutrient_B12_benchmark DESC
    - nutrient_calcium_benchmark
    - nutrient_calcium_benchmark DESC
    - nutrient_energy_benchmark
    - nutrient_energy_benchmark DESC
    - nutrient_fat_benchmark_saturated
    - nutrient_fat_benchmark_saturated DESC
    - nutrient_fat_benchmark_total
    - nutrient_fat_benchmark_total DESC
    - nutrient_fat_benchmark_trans
    - nutrient_fat_benchmark_trans DESC
    - nutrient_fiber_benchmark
    - nutrient_fiber_benchmark DESC
    - nutrient_iron_benchmark
    - nutrient_iron_benchmark DESC
    - nutrient_natrium_benchmark
    - nutrient_natrium_benchmark DESC
    - nutrient_protein_benchmark
    - nutrient_protein_benchmark DESC
    - nutrient_salt_benchmark
    - nutrient_salt_benchmark DESC
    - nutrient_sugar_benchmark
    - nutrient_sugar_benchmark DESC
    in: query
    description: sorting order (extra values for biz detail)
    required: false

  sortIngredients:
    x-internal: true
    name: sort
    type: string
    enum:
    - name
    - impact_animals
    - impact_animals_1_physical_impact
    - impact_animals_2_housing
    - impact_animals_3_feed
    - impact_animals_4_transport
    - impact_animals_5_slaughter
    - impact_animals_6_dam
    - impact_social
    - impact_social_1_association
    - impact_social_2_forced
    - impact_social_3_child
    - impact_social_4_discrimination
    - impact_social_5_wage
    - impact_social_6_health_safety
    - impact_social_7_migrant
    - impact_social_8_hours
    - impact_social_9_water
    - impact_social_10_land
    - impact_social_11_ocean
    - impact_env_2_biodiversity_1_fish_stocks
    - impact_env_2_biodiversity_2_fishery_effects
    - impact_env_2_biodiversity_3_fishery_management
    in: query
    description: sorting order (requires owner)
  sortProductIngredients:
    x-internal: true
    name: sort
    type: string
    enum:
    - name
    - name DESC
    - impact_animals
    - impact_animals_1_physical_impact
    - impact_animals_2_housing
    - impact_animals_3_feed
    - impact_animals_4_transport
    - impact_animals_5_slaughter
    - impact_animals_6_dam
    - impact_social
    - impact_social_1_association
    - impact_social_2_forced
    - impact_social_3_child
    - impact_social_4_discrimination
    - impact_social_5_wage
    - impact_social_6_health_safety
    - impact_social_7_migrant
    - impact_social_8_hours
    - impact_social_9_water
    - impact_social_10_land
    - impact_social_11_ocean
    - impact_env_2_biodiversity_1_fish_stocks
    - impact_env_2_biodiversity_2_fishery_effects
    - impact_env_2_biodiversity_3_fishery_management
    - product_count
    - product_count ASC
    in: query
    description: sorting order (requires owner)
    required: false

  ids:
    name: ids[]
    type: array
    items:
      type: integer
    in: query
    description: fetch multiple products by id
    required: false
    collectionFormat: multi
  package_size_min:
    name: package_size_min
    type: integer
    in: query
    description: Require a minimum package size (&ge;) in grams or milliliters
    required: false
  package_size_max:
    name: package_size_max
    type: integer
    in: query
    description: Require a maximum package size (&le;) in grams or milliliters
    required: false
  package_size_unit:
    name: package_size_unit
    type: string
    enum: ['g', 'ml']
    in: query
    description: Restrict by package size unit
    required: false
  detailProduct:
    name: detail
    x-internal: true
    type: string
    enum: ['list', 'default', 'health', 'biz']
    in: query
    description: detail level
    required: false
  detailIngredient:
    name: detail
    x-internal: true
    type: string
    enum: ['default', 'biz']
    in: query
    description: detail level (biz requires owner)
    required: false
  brands_q_name:
    name: brands[q]
    type: string
    in: query
    description: restrict by brand search query (name)
    required: false
  certificates_q_name:
    name: certificates[q]
    type: string
    in: query
    description: restrict by certificate search query (name)
    required: false
  retailers_q_name:
    name: retailers[q]
    type: string
    in: query
    description: restrict by retailer search query (name)
    required: false
  usages_q_name:
    name: usages[q]
    type: string
    in: query
    description: restrict by usage search query (name)
    required: false

  histogramGroupBy:
    name: group_by
    type: string
    enum: ['sustainability_score', 'personal_health_score']
    x-internal: true
    in: query
    description: x-axis of the histogram
    required: false

  email:
    name: user[email]
    type: string
    in: query
    required: true
  password:
    name: user[password]
    type: string
    format: password
    in: query
    required: true
  app:
    name: user[app]
    type: string
    enum: ['questionmark-app', 'checkit']
    in: query
    required: false
  device_uuid:
    name: device_uuid
    type: string
    in: query
    required: false

  flaggingFlag:
    name: flagging[flag]
    type: string
    enum: ['spam', 'offensive', 'irrelevant', 'commercial', 'old', 'other']
    x-internal: true
    in: query
    description: flagging reason
    required: true
  flaggingOriginatingUrl:
    name: flagging[originating_url]
    type: string
    x-internal: true
    in: query
    description: url of page where the story was shown
  flaggingDeviceUuid:
    name: device_uuid
    type: string
    in: query
    description: device identifier (required if not logged in)
    required: false

definitions:
  # models
  Brand:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
  Retailer:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      priority:
        type: ['integer', 'null']
        description: well-known retailers have a higher priority
  Certificate:
    type: object
    description: Certificate (e.g. EU Organic, Weidemelk, Vegetarisch, etc.)
    properties:
      id:
        type: integer
      name:
        type: string
      image_url:
        type: object
        properties:
          thumb:
            type: string
            description: url of image thumbnail
  Ingredient:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
  IngredientBiz:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      base_name:
        type: string
      properties:
        type: object
      scoring_data:
        type: object
      private:
        type: boolean
  ProductIngredient:
    type: object
    properties:
      ingredient:
        $ref: '#/definitions/Ingredient'
  ProductNutrient:
    type: object
    properties:
      name:
        type: string
        description: nutrient name
      value:
        type: number
      unit:
        type: string
        description: nutrient unit (unit / per)
  HealthGroup:
    type: object
    description: each product's health group determines how its health score is determined, based on rules
    properties:
      id:
        type: integer
      name:
        type: string
      # too unclear to show right now
      #rules:
      #  type: array
      #  items:
      #    $ref: '#/definitions/HealthGroupRule'
  HealthGroupRule:
    x-internal: true
    type: object
    description: health group rules determine a product's health score, used properties depend on its type (if you need more info, please contact us so that we can expand this)
    properties:
      type:
        type: string
        enum: ['nutrient_rule' ,'nutrient_comparison_rule', 'ingredient_base_rule', 'static_rule']
      nutrient_code:
        type: string
      cmp:
        type: string
        enum: ['<', '≤', '>', '≥']
      value:
        type: number
      unit:
        type: string
      per:
        type: string
      score:
        type: string
        enum: ['A', 'B1', 'B2', 'C1', 'C2']
      of:
        type: string
      ingredient_base_type:
        type: string
      fat_trans:
        type: boolean
      present:
        type: boolean
  SimpleUsage:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
  Usage:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      children:
        type: array
        items:
          - $ref: '#/definitions/Usage'
  Category:
    x-internal: true
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      children:
        type: array
        items:
          - $ref: '#/definitions/Category'
  Story:
    type: object
    properties:
      id:
        type: integer
      url:
        type: string
      title:
        type: string
      description:
        type: ['null', 'string']
      type:
        type: 'string'
        enum: ['photo', 'video', 'link', 'rich', 'html']
      image:
        type: object
        properties:
          url:
            type: string
          width:
            type: number
          height:
            type: number
  Product:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
        description: product name
      brand_name:
        type: string
        description: product brand
      score:
        type: ['integer', 'null']
        description: sustainability score (1-10)
      personal_health_score:
        type: ['string', 'null']
        enum: ['A', 'B1', 'B2', 'C1', 'C2']
        description: health score
      theme_scores:
        type: array
        items:
          type: object
          properties:
            theme_key:
              type: string
              description: sustainability theme (environment, social or animals)
            score:
              type: integer
              description: sustainability theme score (1-10)
      product_nutrients:
        type: array
        items:
          - $ref: '#/definitions/ProductNutrient'
      product_ingredients:
        type: array
        items:
          - $ref: '#/definitions/ProductIngredient'
      usages:
        type: array
        description: hierarchical list of product usages (categories)
        items:
          - $ref: '#/definitions/SimpleUsage'
      certificates:
        type: array
        items:
          - $ref: '#/definitions/Certificate'
      retailers:
        type: array
        items:
          $ref: '#/definitions/Retailer'
      image_urls:
        type: array
        description: product image (0-1 images)
        items:
          type: object
          properties:
            thumb:
              type: string
              description: url of image thumbnail
            medium:
              type: string
              description: url of medium-size image
  ProductsHistogram:
    x-internal: true
    type: object
    properties:
      data:
        type: array
        description: histogram of scores and their number of products
        items:
          type: array
          description: score-number pair
          items:
            type: ['string', 'number']
  ScoringReportScore:
    x-internal: true
    type: object
    properties:
      id:
        type: string
      label:
        type: string
        description: human-readable name for this scoring theme
      type:
        type: string
        enum: ['Score', 'Impact']
        description: a score is a rating from 1-10 (10 is best), while an impact is a risk (0 is best)
      value:
        type: number
        format: float
        description: the score or impact of this scoring theme (depending on type)
      weight:
        type: number
        format: float
        description: the weight this score has among its peers
      impact:
        type: number
        format: float
        description: relative impact for the product, the sum of all impacts is the total impact
      description:
        type: object
        properties:
          title:
            type: string
            description: short human-readable name
          body:
            type: string
            description: longer explanation of this scoring theme
          references:
            type: array
            description: external references about background, methodology and sources
            items:
              type: object
              properties:
                title:
                  type: string
                url:
                  type: string
      scoring_data_name:
        type: string
        description: optional data field name for sorting ingredients
      children:
        type: array
        items:
          $ref: '#/definitions/ScoringReportScore'
  ScoringReport:
    x-internal: true
    type: object
    properties:
      generated_on:
        type: string
        format: date
        description: date score was generated
      score:
        $ref: '#/definitions/ScoringReportScore'

  User:
    x-internal: true
    type: object
    properties:
      id:
        type: integer
      preferences:
        type: object
        properties:
          environment:
            type: string
            enum: ['less_important', 'more_important']
          social:
            type: string
            enum: ['less_important', 'more_important']
          animals:
            type: string
            enum: ['less_important', 'more_important']
      retailer_ids:
        type: array
        description: preferred retailers
        items:
          type: integer
      preferences_set:
        type: boolean
      can_preview:
        type: boolean
        description: whether the user can view staged scores
      device_uuid:
        type: string
      email:
        type: string
        description: email address (only for email login)
      login_provider:
        type: string
        description: external login provider (only for external login)
      uid:
        type: string
        description: external user identifier (only for external login)
      name:
        type: string
        description: name (only for external login and owners)
      username:
        type: string
        description: username (only for external login)
      gender:
        type: string
        description: gender (only for external login)
      location:
        type: string
        description: location (only for external login)
      locale:
        type: string
      created:
        type: string
      liked_resource_gids:
        type: array
        description: resources liked
        items:
          type: string
      flagged_resource_gids:
        type: array
        description: resources flagged for removal
        items:
          type: string
      # @todo owner fields

  total:
    type: integer
    description: total number of items
    minimum: 0

  Success:
    type: object
    properties:
      success:
        type: boolean
        description: always true
  Error:
    type: object
    properties:
      status:
        type: string
        description: error code
      error:
        type: string
        description: short human-readable error message

securityDefinitions:
  api_key:
    type: apiKey
    name: authentication_token
    in: query
